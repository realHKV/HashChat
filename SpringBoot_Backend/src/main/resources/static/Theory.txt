
** Handling WebSocket's Connections - Handler File **

First, we have to create a file that can handle the operations of the WebSocket. We will extend the class
TextWebSocketHandler and using that we will manage some operations.

So, We want to manage

   1. The function that can handle the First-time connection from the user.
   2. Functions that can handle when the user Disconnects from the server
   3. Users exchange the messages

Note: For managing the connections we will be using a list but in real-time you can use
      In-Memory storage like Redis, Dedicated Database and Dedicated Message broker like RabbitMQ.

}

  * In the Handler file we have taken the methods afterConnectionEstablished, afterConnectionClosed, and handleMessage.
    Functions for managing the connections also log the ID of the session which can be useful for confirming whether the
    user has made a successful connection or not.
  * In handleMessage we are iterating over the list of connections and one by one we will send the message to all the
    connections except the one session who is sending the message.

** Code For Creating Socket in Spring Boot - Configuration File **

create an endpoint where the socket can be found.